// <auto-generated />
using System;
using BullBeez.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BullBeez.Data.Migrations
{
    [DbContext(typeof(BullBeezDBContext))]
    [Migration("20211021195129_Version_1.32")]
    partial class Version_132
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("BullBeez.Core.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressString")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("AddressType")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyAndPersonsId")
                        .HasColumnType("int");

                    b.Property<int?>("CountyId")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .HasColumnType("longtext");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Locality")
                        .HasColumnType("longtext");

                    b.Property<string>("PostCode")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonsId");

                    b.HasIndex("CountyId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.BullBeezConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("JsonData")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("BullBeezConfig");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PlateNumber")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Biography")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("BullbeezSentence")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompanyDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int?>("CompanyLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ConnectCount")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("EstablishDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GSM")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("NameOrTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("longtext");

                    b.Property<int>("ProfileType")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("WorkerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyLevelId");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("CompanyAndPerson");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPersonDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<int>("Test")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.ToTable("CompanyAndPersonDetails");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPersonInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ComponyAndPersonId")
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ComponyAndPersonId");

                    b.HasIndex("InterestId");

                    b.ToTable("CompanyAndPersonInterest");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPersonOccupation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<int>("ComponyAndPersonId")
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("OccupationId")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.HasIndex("OccupationId");

                    b.ToTable("CompanyAndPersonOccupation");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPersonProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ComponyAndPersonId")
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ComponyAndPersonId");

                    b.HasIndex("ProjectId");

                    b.ToTable("CompanyAndPersonProject");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPersonSkills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ComponyAndPersonId")
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ComponyAndPersonId");

                    b.HasIndex("SkillId");

                    b.ToTable("CompanyAndPersonSkills");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CompanyLevel");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVenture")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CompanyType");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("County");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.FileData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte[]>("ByteFile")
                        .HasColumnType("longblob");

                    b.Property<int>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("FileType")
                        .HasColumnType("longtext");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.ToTable("File");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Follows", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<int>("FollowType")
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsShow")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<int>("ToUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("WorkerFollowType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.ToTable("Follows");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Interest");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.MailApprovedCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.ToTable("MailApprovedCode");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("IsShow")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("longtext");

                    b.Property<int>("ProfileType")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<int>("ToUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Occupation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("IsShowSkill")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Occupations");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("PackageIcon")
                        .HasColumnType("longtext");

                    b.Property<string>("PackageName")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.PackagePayments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<int>("ContractConfirmation")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("IsPayment")
                        .HasColumnType("int");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("TextData")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.ToTable("PackagePayments");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.PopUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("PageNumber")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PopUp");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.PopUpIsRead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("PopUpId")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PopUpIsRead");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.PostComments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserPostsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.HasIndex("UserPostsId");

                    b.ToTable("PostComments");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Posts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("MediaLink")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PostLink")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UserLink")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Guid")
                        .HasColumnType("longtext");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int?>("MonthCount")
                        .HasColumnType("int");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ProjectRoleName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.ProjectInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectInterest");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.QuestionOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Option")
                        .HasColumnType("longtext");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionOptions");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Questions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Question")
                        .HasColumnType("longtext");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.RequestHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FunctionName")
                        .HasColumnType("longtext");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("JsonRequest")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RequestHistory");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(11,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("ServiceIcon")
                        .HasColumnType("longtext");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.ServiceAnswers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<int>("ContractConfirmation")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("IsPayment")
                        .HasColumnType("int");

                    b.Property<int>("QuestionoptionsId")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("TextData")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.ToTable("ServiceAnswer");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.ServiceQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceQuestions");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("TestData")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BeginData")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("EndData")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirebaseToken")
                        .HasColumnType("longtext");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("TokenId")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.UserPosts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyAndPersonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InsertedIp")
                        .HasColumnType("longtext");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int");

                    b.Property<string>("PostMedia")
                        .HasColumnType("longtext");

                    b.Property<string>("PostText")
                        .HasColumnType("longtext");

                    b.Property<string>("PostTopics")
                        .HasColumnType("longtext");

                    b.Property<int?>("RowStatu")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAndPersonId");

                    b.ToTable("UserPosts");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Address", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPersons")
                        .WithMany("Address")
                        .HasForeignKey("CompanyAndPersonsId");

                    b.HasOne("BullBeez.Core.Entities.County", "County")
                        .WithMany()
                        .HasForeignKey("CountyId");

                    b.Navigation("CompanyAndPersons");

                    b.Navigation("County");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPerson", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyLevel", "CompanyLevel")
                        .WithMany()
                        .HasForeignKey("CompanyLevelId");

                    b.HasOne("BullBeez.Core.Entities.CompanyType", "CompanyType")
                        .WithMany()
                        .HasForeignKey("CompanyTypeId");

                    b.Navigation("CompanyLevel");

                    b.Navigation("CompanyType");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPersonDetail", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany("CompanyAndPersonDetails")
                        .HasForeignKey("CompanyAndPersonId");

                    b.Navigation("CompanyAndPerson");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPersonInterest", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "ComponyAndPerson")
                        .WithMany("CompanyAndPersonInterests")
                        .HasForeignKey("ComponyAndPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BullBeez.Core.Entities.Interest", "Interest")
                        .WithMany("CompanyAndPersonInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComponyAndPerson");

                    b.Navigation("Interest");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPersonOccupation", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany("CompanyAndPersonOccupation")
                        .HasForeignKey("CompanyAndPersonId");

                    b.HasOne("BullBeez.Core.Entities.Occupation", "Occupation")
                        .WithMany("ComponyAndPersonOccupations")
                        .HasForeignKey("OccupationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyAndPerson");

                    b.Navigation("Occupation");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPersonProject", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "ComponyAndPerson")
                        .WithMany("CompanyAndPersonProject")
                        .HasForeignKey("ComponyAndPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BullBeez.Core.Entities.Project", "Project")
                        .WithMany("CompanyAndPersonProject")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComponyAndPerson");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPersonSkills", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "ComponyAndPerson")
                        .WithMany("CompanyAndPersonSkills")
                        .HasForeignKey("ComponyAndPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BullBeez.Core.Entities.Skill", "Skill")
                        .WithMany("CompanyAndPersonSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComponyAndPerson");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.County", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.City", "City")
                        .WithMany("Counties")
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Education", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany("Education")
                        .HasForeignKey("CompanyAndPersonId");

                    b.Navigation("CompanyAndPerson");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Feedback", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CompanyAndPersonId");

                    b.Navigation("CompanyAndPerson");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.FileData", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany("Files")
                        .HasForeignKey("CompanyAndPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyAndPerson");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Follows", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany("Follows")
                        .HasForeignKey("CompanyAndPersonId");

                    b.Navigation("CompanyAndPerson");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.MailApprovedCode", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany("MailApprovedCodes")
                        .HasForeignKey("CompanyAndPersonId");

                    b.Navigation("CompanyAndPerson");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Notification", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany()
                        .HasForeignKey("CompanyAndPersonId");

                    b.Navigation("CompanyAndPerson");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.PackagePayments", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany()
                        .HasForeignKey("CompanyAndPersonId");

                    b.Navigation("CompanyAndPerson");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.PostComments", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany()
                        .HasForeignKey("CompanyAndPersonId");

                    b.HasOne("BullBeez.Core.Entities.UserPosts", "UserPosts")
                        .WithMany("Comments")
                        .HasForeignKey("UserPostsId");

                    b.Navigation("CompanyAndPerson");

                    b.Navigation("UserPosts");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.ProjectInterest", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.Interest", "Interest")
                        .WithMany("ProjectInterest")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BullBeez.Core.Entities.Project", "Project")
                        .WithMany("ProjectInterest")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.QuestionOptions", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.Questions", "Question")
                        .WithMany("QuestionOptions")
                        .HasForeignKey("QuestionId");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.ServiceAnswers", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany()
                        .HasForeignKey("CompanyAndPersonId");

                    b.Navigation("CompanyAndPerson");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.ServiceQuestion", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.Questions", "Question")
                        .WithMany("ServiceQuestions")
                        .HasForeignKey("QuestionId");

                    b.HasOne("BullBeez.Core.Entities.Service", "Service")
                        .WithMany("ServiceQuestions")
                        .HasForeignKey("ServiceId");

                    b.Navigation("Question");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Token", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany("Tokens")
                        .HasForeignKey("CompanyAndPersonId");

                    b.Navigation("CompanyAndPerson");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.UserPosts", b =>
                {
                    b.HasOne("BullBeez.Core.Entities.CompanyAndPerson", "CompanyAndPerson")
                        .WithMany()
                        .HasForeignKey("CompanyAndPersonId");

                    b.Navigation("CompanyAndPerson");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.City", b =>
                {
                    b.Navigation("Counties");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.CompanyAndPerson", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("CompanyAndPersonDetails");

                    b.Navigation("CompanyAndPersonInterests");

                    b.Navigation("CompanyAndPersonOccupation");

                    b.Navigation("CompanyAndPersonProject");

                    b.Navigation("CompanyAndPersonSkills");

                    b.Navigation("Education");

                    b.Navigation("Feedbacks");

                    b.Navigation("Files");

                    b.Navigation("Follows");

                    b.Navigation("MailApprovedCodes");

                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Interest", b =>
                {
                    b.Navigation("CompanyAndPersonInterests");

                    b.Navigation("ProjectInterest");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Occupation", b =>
                {
                    b.Navigation("ComponyAndPersonOccupations");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Project", b =>
                {
                    b.Navigation("CompanyAndPersonProject");

                    b.Navigation("ProjectInterest");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Questions", b =>
                {
                    b.Navigation("QuestionOptions");

                    b.Navigation("ServiceQuestions");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Service", b =>
                {
                    b.Navigation("ServiceQuestions");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.Skill", b =>
                {
                    b.Navigation("CompanyAndPersonSkills");
                });

            modelBuilder.Entity("BullBeez.Core.Entities.UserPosts", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
